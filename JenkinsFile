pipeline {
	environment {
	registryCredential = 'Docker_Hub'
	}	
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "Maven_Home"
    }
    
    options {
        timestamps()
        skipDefaultCheckout()        
        buildDiscarder((logRotator(daysToKeepStr:'10', numToKeepStr:'10'))) 
    }

    stages {
        stage('Checkout') {
            steps {
                echo "Checkout from Git Master Branch"
                checkout scm
            }
        }

        stage('Compile') {
            steps {
                echo "Compile the code"
                bat "mvn clean compile"
            }
        }
        
        stage('Test Cases') {
        		steps {
                echo "Run Test Cases"
                bat "mvn test"
            }
        }
        
        stage('Build') {
        		steps {
                echo "Build the code"
                bat "mvn install"
            }
        }
        
        stage('Sonar Analysis') {
        		steps {
                		withSonarQubeEnv("SonarQubeDefault") {
                			echo "Sonar Analysis"
                			bat "mvn sonar:sonar"
                		}
            	}
        }    
        
        stage('Upload to Artifactory') {
        		steps {
                		rtMavenDeployer (
									    id: 'deployer-id',
									    serverId: 'Artifactory',
									    releaseRepo: 'Jenkins-integration',
									    snapshotRepo: 'Jenkins-snapshot'
									    )
						rtMavenRun (
								    pom: 'pom.xml',
								    goals: 'clean install',
								    deployerId: 'deployer-id'
						)		
						
						rtPublishBuildInfo (
    							serverId: "Artifactory"
						)		    
									    
            	}
        }
        
        stage('Build Docker Image') {
        		steps {
						bat "docker build -t bhaveshkwatra/devops-demo:${BUILD_NUMBER} --no-cache -f Dockerfile ."			    
            	}
        }
        
        stage('Push Docker Image') {
        		steps {
        				script {
        						docker.withRegistry('', registryCredential ) {
        							bat "docker push bhaveshkwatra/devops-demo:${BUILD_NUMBER}"	
          						}	
        				}
            	}
        }
        
        stage('Stop Pre-existing Container') {
        		steps {
        				bat "(docker stop devops-assign || (exit 0)) && (docker rm devops-assign || (exit 0))"
            	}
        }
        
         stage('Start the Container') {
        		steps {
        				bat "docker run -d --name devops-assign -p 8056:8056 bhaveshkwatra/devops-demo:${BUILD_NUMBER}"
            	}
        }
            
     }
        
}
